<html>

<h1>Welcome to Linux Module B!</h1>
<h2>The purpose of this module is to expand of the previous and introduce basic cyber security practices</h2>
<p>Here's the previous list of basic linux commands. Anything between single quotes '' should be replaced with the actual thing. Example: 'filename' should be replaced with the actual filename that you want.</p>
<p></p>
<p>cd 'directory'</p>
<p>ls</p>
<p>mv 'filename' '/path/to/location'</p>
<p>cp 'filename' '/path/to/location'</p>
<p>touch 'filename' </p>
<p>rm 'filename'</p>
<p>mkdir 'directory'</p>
<p>rmdir 'directory'</p>
<p>nano 'filename'</p>
<p>gedit 'filename'</p>
<p></p>
<p>If you need a refresher on these commands, you can open up the previous module; however, you can also Google what they do and their syntax. Using Google effectively is critical to cyber security work and its good to get in the practice of searching using the right terms</p>
<p></p>
<p></p>
<p>In this module, you will utilize nano/gedit to edit specific files as well as using apt to install an application.</p>
<p>One of the most import things to do when first securing a computer is enabling the firewall</p>
<p></p>
<p>Use the command ufw enable to turn on the firewall. This will prompt you for a password. Enter: l0nest3r </p> 
<h3> ❌️ </h3>
<p></p>
<p>This turns on the firewall making it much more difficult for bad applications to enter your computer.</p>
<p>Open a terminal and navigate to /etc by using "cd /etc". This is where you will do most of your work in cyber security.</p>
<p>Many files in this directory requires admin/root privileges to use. To run commands as root user, put sudo in front of your commands..</p>
<p>Use sudo nano on the login.defs file</p> 
<p>Find the white text that says PASS_MAX_DAYS 99999 (hint: ctrl w works like ctrl f in windows) and change 99999 to 90 </p> <h3> ❌️ </h3>
<p>This change means that all users must change their passwords every 90 days which makes them more secure.</p>
<p>Change the 0 in the next line to 10 </p> <h3> ❌️ </h3>
<p>This change means that all users cannot change their password until they had those passwords for 10 days minimum. Press ctrl and x at the same time to exit the file and press y then enter to save your changes</p>
<p>Use "sudo nano group" to see all the users on the computer. If you scroll down, you will see the user kali. This user is not supposed to be on the computer and is a massive security threat. Exit the file using ctrl x.</p>
<p>Use the command "sudo userdel kali" to remove them from the system. </p> <h3> ❌️ </h3>
<p>This can also be done by deleting them from the group, shadow, and passwd files but using this command is quicker and more thorough.</p>
<p>Finally you will install an application called secure shell (SSH) which is a remote desktop application. It is often used people running linux to remotely connect to their computers in a secure way.</p>
<p>Use "sudo apt install openssh-client" to install ssh on your computer </p> <h3> ❌️ </h3>
<p>Navigate to the ssh directory in etc and use nano to open the ssh_config file. This file controls automatic processes that the application does whenever you open the computer so it is very important for security</p>
<p>Remove the # in front of the line that reads ForwardX11 no. </p> <h3> ❌️ </h3>
<p>Removing this means that anyone remotely connecting to the computer will only have access to a terminal making it harder for a hacker to get information off your computer</p>
<p>Remove the # in front of the line that reads Port 22 <p/> <h3> ❌️ </h3>
<p>Removing this means that ssh uses port 22 to send data to the remote computer. This is ssh's assigned port making the application run without conflicting with other applications.</p>
<p>Add Protocol 2 to the bottom of the file. </p> <h3> ❌️ </h3>
<p>Adding this line makes ssh use a newer protocol which is more secure than the previous.</p>
<p>Finally, add PremitRootLogin no to the end of the file. </p> <h3> ❌️ </h3>
<p>Adding this line means that anyone remotely accessing your computer through ssh cannot login as the root user meaning if a hacker does get in through ssh, they cannot do as much damage because they have no privileges</p>


<h3>Congratulations! You finsihed Linux Module B and can now manuver through a linux system and secure it. You can also secure an important sevice used by millions a day to access their computer<h3>

</html>
